图从数学领域进化而来，主要被用来描述一个从一个位置到另一个位置的路线的模型。

树，和图一样也是一系列点的集合。有一个根节点。这个根节点有一些子节点。子节点也有它们自己的孙子节点。不断重复直到所有的数据都被用树的数据结构表示。下面的图表示了一个树的数据结构

每个节点有零个或多个子节点；

二叉树是一种特殊的有序树：每个节点至多有两个分支（子节点），分支具有左右次序，不能颠倒。

两种特殊的二叉树：
完全二叉树：除最后一层外，若其余层都是满的，并且最后一层或者是满的，或者是在右边缺少连续若干节点（注意是右边，而不能是左边缺少）。
满二叉树：每一层都是满的（除了最后一层，这里的最后一层是指叶节点）。

红黑树（英语：Red–black tree）是一种自平衡二叉查找树。
它可以在O(log n)时间内做查找，插入和删除，这里的n是树中元素的数目。
红黑树在很多地方都有应用。比如在 Java 集合框架中，很多部分(HashMap, TreeMap, TreeSet 等)都有红黑树的应用，这些集合均提供了很好的性能。
由于 TreeMap 就是由红黑树实现的，因此本文将使用 TreeMap 的相关操作的代码进行分析、论证。
每个节点要么是红色，要么是黑色；
根节点永远是黑色的；
所有的叶节点都是是黑色的（注意这里说叶子节点其实是上图中的 NIL 节点）；
每个红色节点的两个子节点一定都是黑色；
从任一节点到其子树中每个叶子节点的路径都包含相同数量的黑色节点；

二叉查找树
1.左子树上所有结点的值均小于或等于它的根结点的值。

2.右子树上所有结点的值均大于或等于它的根结点的值。

3.左、右子树也分别为二叉排序树。

二分查找的思想

https://zhuanlan.zhihu.com/p/31805309
